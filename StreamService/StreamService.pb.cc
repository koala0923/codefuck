// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StreamService.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "StreamService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace StreamService {

namespace {

const ::google::protobuf::Descriptor* LoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartBeatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartBeatRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeatRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* HangUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HangUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamExhange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamExhange_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageCmdID_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* LoginResultType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CallType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CallResultType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_StreamService_2eproto() {
  protobuf_AddDesc_StreamService_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "StreamService.proto");
  GOOGLE_CHECK(file != NULL);
  LoginReq_descriptor_ = file->message_type(0);
  static const int LoginReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, reversed_),
  };
  LoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginReq_descriptor_,
      LoginReq::default_instance_,
      LoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
      -1);
  LoginRes_descriptor_ = file->message_type(1);
  static const int LoginRes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRes, result_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRes, result_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRes, reversed_),
  };
  LoginRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRes_descriptor_,
      LoginRes::default_instance_,
      LoginRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRes, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRes, _internal_metadata_),
      -1);
  HeartBeatReq_descriptor_ = file->message_type(2);
  static const int HeartBeatReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, reversed_),
  };
  HeartBeatReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartBeatReq_descriptor_,
      HeartBeatReq::default_instance_,
      HeartBeatReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(HeartBeatReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, _internal_metadata_),
      -1);
  HeartBeatRes_descriptor_ = file->message_type(3);
  static const int HeartBeatRes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRes, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRes, msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRes, reversed_),
  };
  HeartBeatRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartBeatRes_descriptor_,
      HeartBeatRes::default_instance_,
      HeartBeatRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRes, _has_bits_[0]),
      -1,
      -1,
      sizeof(HeartBeatRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRes, _internal_metadata_),
      -1);
  CallReq_descriptor_ = file->message_type(4);
  static const int CallReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallReq, from_user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallReq, to_session_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallReq, call_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallReq, reversed_),
  };
  CallReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallReq_descriptor_,
      CallReq::default_instance_,
      CallReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(CallReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallReq, _internal_metadata_),
      -1);
  CallRes_descriptor_ = file->message_type(5);
  static const int CallRes_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRes, from_user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRes, to_session_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRes, call_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRes, call_result_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRes, reversed_),
  };
  CallRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallRes_descriptor_,
      CallRes::default_instance_,
      CallRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRes, _has_bits_[0]),
      -1,
      -1,
      sizeof(CallRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRes, _internal_metadata_),
      -1);
  HangUpReq_descriptor_ = file->message_type(6);
  static const int HangUpReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HangUpReq, from_user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HangUpReq, to_session_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HangUpReq, call_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HangUpReq, reversed_),
  };
  HangUpReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HangUpReq_descriptor_,
      HangUpReq::default_instance_,
      HangUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HangUpReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(HangUpReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HangUpReq, _internal_metadata_),
      -1);
  StreamExhange_descriptor_ = file->message_type(7);
  static const int StreamExhange_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamExhange, from_user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamExhange, to_session_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamExhange, call_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamExhange, reversed_),
  };
  StreamExhange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StreamExhange_descriptor_,
      StreamExhange::default_instance_,
      StreamExhange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamExhange, _has_bits_[0]),
      -1,
      -1,
      sizeof(StreamExhange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamExhange, _internal_metadata_),
      -1);
  MessageCmdID_descriptor_ = file->enum_type(0);
  LoginResultType_descriptor_ = file->enum_type(1);
  CallType_descriptor_ = file->enum_type(2);
  CallResultType_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_StreamService_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginReq_descriptor_, &LoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRes_descriptor_, &LoginRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartBeatReq_descriptor_, &HeartBeatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartBeatRes_descriptor_, &HeartBeatRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallReq_descriptor_, &CallReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallRes_descriptor_, &CallRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HangUpReq_descriptor_, &HangUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StreamExhange_descriptor_, &StreamExhange::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_StreamService_2eproto() {
  delete LoginReq::default_instance_;
  delete LoginReq_reflection_;
  delete LoginRes::default_instance_;
  delete LoginRes_reflection_;
  delete HeartBeatReq::default_instance_;
  delete HeartBeatReq_reflection_;
  delete HeartBeatRes::default_instance_;
  delete HeartBeatRes_reflection_;
  delete CallReq::default_instance_;
  delete CallReq_reflection_;
  delete CallRes::default_instance_;
  delete CallRes_reflection_;
  delete HangUpReq::default_instance_;
  delete HangUpReq_reflection_;
  delete StreamExhange::default_instance_;
  delete StreamExhange_reflection_;
}

void protobuf_AddDesc_StreamService_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023StreamService.proto\022\rStreamService\"A\n\010"
    "LoginReq\022\021\n\tuser_name\030\001 \002(\t\022\020\n\010password\030"
    "\002 \002(\t\022\020\n\010reversed\030\n \001(\t\"h\n\010LoginRes\0223\n\013r"
    "esult_code\030\001 \002(\0162\036.StreamService.LoginRe"
    "sultType\022\025\n\rresult_string\030\002 \001(\t\022\020\n\010rever"
    "sed\030\n \001(\t\"C\n\014HeartBeatReq\022\021\n\tuser_name\030\001"
    " \002(\t\022\016\n\006msg_id\030\002 \002(\r\022\020\n\010reversed\030\n \001(\t\"C"
    "\n\014HeartBeatRes\022\021\n\tuser_name\030\001 \002(\t\022\016\n\006msg"
    "_id\030\002 \002(\r\022\020\n\010reversed\030\n \001(\t\"x\n\007CallReq\022\026"
    "\n\016from_user_name\030\001 \002(\t\022\027\n\017to_session_nam"
    "e\030\002 \002(\t\022*\n\tcall_type\030\003 \002(\0162\027.StreamServi"
    "ce.CallType\022\020\n\010reversed\030\n \001(\t\"\261\001\n\007CallRe"
    "s\022\026\n\016from_user_name\030\001 \002(\t\022\027\n\017to_session_"
    "name\030\002 \002(\t\022*\n\tcall_type\030\003 \002(\0162\027.StreamSe"
    "rvice.CallType\0227\n\020call_result_type\030\004 \002(\016"
    "2\035.StreamService.CallResultType\022\020\n\010rever"
    "sed\030\n \001(\t\"z\n\tHangUpReq\022\026\n\016from_user_name"
    "\030\001 \002(\t\022\027\n\017to_session_name\030\002 \002(\t\022*\n\tcall_"
    "type\030\003 \002(\0162\027.StreamService.CallType\022\020\n\010r"
    "eversed\030\n \001(\t\"~\n\rStreamExhange\022\026\n\016from_u"
    "ser_name\030\001 \002(\t\022\027\n\017to_session_name\030\002 \003(\t\022"
    "*\n\tcall_type\030\003 \002(\0162\027.StreamService.CallT"
    "ype\022\020\n\010reversed\030\n \001(\t*\275\001\n\014MessageCmdID\022\026"
    "\n\021CID_LOGIN_REQ_MSG\020\201\002\022\026\n\021CID_LOGIN_RES_"
    "MSG\020\202\002\022\032\n\025CID_HEARTBEAT_REQ_MSG\020\203\002\022\032\n\025CI"
    "D_HEARTBEAT_RES_MSG\020\204\002\022\025\n\020CID_CALL_REQ_M"
    "SG\020\201\004\022\025\n\020CID_CALL_RES_MSG\020\202\004\022\027\n\022CID_HANG"
    "UP_REQ_MSG\020\203\004*V\n\017LoginResultType\022\025\n\021LOGI"
    "N_RESULT_NONE\020\000\022\023\n\017LOGIN_RESULT_OK\020\001\022\027\n\023"
    "LOGIN_RESULT_FAILED\020\002*H\n\010CallType\022\022\n\016CAL"
    "L_TYPE_NONE\020\000\022\023\n\017CALL_TYPE_VOICE\020\001\022\023\n\017CA"
    "LL_TYPE_VIDEO\020\002*~\n\016CallResultType\022\024\n\020CAL"
    "L_Result_NONE\020\000\022\034\n\030CALL_Result_USER_OFFL"
    "INE\020\001\022\033\n\027CALL_Result_USER_REFUSE\020\002\022\033\n\027CA"
    "LL_Result_USER_ACCEPT\020\003", 1383);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StreamService.proto", &protobuf_RegisterTypes);
  LoginReq::default_instance_ = new LoginReq();
  LoginRes::default_instance_ = new LoginRes();
  HeartBeatReq::default_instance_ = new HeartBeatReq();
  HeartBeatRes::default_instance_ = new HeartBeatRes();
  CallReq::default_instance_ = new CallReq();
  CallRes::default_instance_ = new CallRes();
  HangUpReq::default_instance_ = new HangUpReq();
  StreamExhange::default_instance_ = new StreamExhange();
  LoginReq::default_instance_->InitAsDefaultInstance();
  LoginRes::default_instance_->InitAsDefaultInstance();
  HeartBeatReq::default_instance_->InitAsDefaultInstance();
  HeartBeatRes::default_instance_->InitAsDefaultInstance();
  CallReq::default_instance_->InitAsDefaultInstance();
  CallRes::default_instance_->InitAsDefaultInstance();
  HangUpReq::default_instance_->InitAsDefaultInstance();
  StreamExhange::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_StreamService_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_StreamService_2eproto {
  StaticDescriptorInitializer_StreamService_2eproto() {
    protobuf_AddDesc_StreamService_2eproto();
  }
} static_descriptor_initializer_StreamService_2eproto_;
const ::google::protobuf::EnumDescriptor* MessageCmdID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageCmdID_descriptor_;
}
bool MessageCmdID_IsValid(int value) {
  switch(value) {
    case 257:
    case 258:
    case 259:
    case 260:
    case 513:
    case 514:
    case 515:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginResultType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResultType_descriptor_;
}
bool LoginResultType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CallType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallType_descriptor_;
}
bool CallType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CallResultType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallResultType_descriptor_;
}
bool CallResultType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int LoginReq::kUserNameFieldNumber;
const int LoginReq::kPasswordFieldNumber;
const int LoginReq::kReversedFieldNumber;
#endif  // !_MSC_VER

LoginReq::LoginReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamService.LoginReq)
}

void LoginReq::InitAsDefaultInstance() {
}

LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StreamService.LoginReq)
}

void LoginReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:StreamService.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginReq_descriptor_;
}

const LoginReq& LoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StreamService_2eproto();
  return *default_instance_;
}

LoginReq* LoginReq::default_instance_ = NULL;

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reversed()) {
      reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamService.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.LoginReq.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.LoginReq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reversed;
        break;
      }

      // optional string reversed = 10;
      case 10: {
        if (tag == 82) {
         parse_reversed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.LoginReq.reversed");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamService.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamService.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamService.LoginReq)
  // required string user_name = 1;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginReq.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginReq.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reversed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamService.LoginReq)
}

::google::protobuf::uint8* LoginReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamService.LoginReq)
  // required string user_name = 1;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginReq.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginReq.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reversed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamService.LoginReq)
  return target;
}

int LoginReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_user_name()) {
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
int LoginReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reversed = 10;
  if (has_reversed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reversed());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_reversed()) {
      set_has_reversed();
      reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  user_name_.Swap(&other->user_name_);
  password_.Swap(&other->password_);
  reversed_.Swap(&other->reversed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginReq_descriptor_;
  metadata.reflection = LoginReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoginRes::kResultCodeFieldNumber;
const int LoginRes::kResultStringFieldNumber;
const int LoginRes::kReversedFieldNumber;
#endif  // !_MSC_VER

LoginRes::LoginRes()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamService.LoginRes)
}

void LoginRes::InitAsDefaultInstance() {
}

LoginRes::LoginRes(const LoginRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StreamService.LoginRes)
}

void LoginRes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_code_ = 0;
  result_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginRes::~LoginRes() {
  // @@protoc_insertion_point(destructor:StreamService.LoginRes)
  SharedDtor();
}

void LoginRes::SharedDtor() {
  result_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRes_descriptor_;
}

const LoginRes& LoginRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StreamService_2eproto();
  return *default_instance_;
}

LoginRes* LoginRes::default_instance_ = NULL;

LoginRes* LoginRes::New(::google::protobuf::Arena* arena) const {
  LoginRes* n = new LoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRes::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    result_code_ = 0;
    if (has_result_string()) {
      result_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reversed()) {
      reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamService.LoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .StreamService.LoginResultType result_code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StreamService::LoginResultType_IsValid(value)) {
            set_result_code(static_cast< ::StreamService::LoginResultType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_result_string;
        break;
      }

      // optional string result_string = 2;
      case 2: {
        if (tag == 18) {
         parse_result_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result_string().data(), this->result_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.LoginRes.result_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reversed;
        break;
      }

      // optional string reversed = 10;
      case 10: {
        if (tag == 82) {
         parse_reversed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.LoginRes.reversed");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamService.LoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamService.LoginRes)
  return false;
#undef DO_
}

void LoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamService.LoginRes)
  // required .StreamService.LoginResultType result_code = 1;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result_code(), output);
  }

  // optional string result_string = 2;
  if (has_result_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result_string().data(), this->result_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginRes.result_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result_string(), output);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginRes.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reversed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamService.LoginRes)
}

::google::protobuf::uint8* LoginRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamService.LoginRes)
  // required .StreamService.LoginResultType result_code = 1;
  if (has_result_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result_code(), target);
  }

  // optional string result_string = 2;
  if (has_result_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result_string().data(), this->result_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginRes.result_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result_string(), target);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.LoginRes.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reversed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamService.LoginRes)
  return target;
}

int LoginRes::ByteSize() const {
  int total_size = 0;

  // required .StreamService.LoginResultType result_code = 1;
  if (has_result_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result_code());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string result_string = 2;
    if (has_result_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_string());
    }

    // optional string reversed = 10;
    if (has_reversed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reversed());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRes::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginRes::MergeFrom(const LoginRes& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result_code()) {
      set_result_code(from.result_code());
    }
    if (from.has_result_string()) {
      set_has_result_string();
      result_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_string_);
    }
    if (from.has_reversed()) {
      set_has_reversed();
      reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRes::CopyFrom(const LoginRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LoginRes::Swap(LoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRes::InternalSwap(LoginRes* other) {
  std::swap(result_code_, other->result_code_);
  result_string_.Swap(&other->result_string_);
  reversed_.Swap(&other->reversed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRes_descriptor_;
  metadata.reflection = LoginRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeartBeatReq::kUserNameFieldNumber;
const int HeartBeatReq::kMsgIdFieldNumber;
const int HeartBeatReq::kReversedFieldNumber;
#endif  // !_MSC_VER

HeartBeatReq::HeartBeatReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamService.HeartBeatReq)
}

void HeartBeatReq::InitAsDefaultInstance() {
}

HeartBeatReq::HeartBeatReq(const HeartBeatReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StreamService.HeartBeatReq)
}

void HeartBeatReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = 0u;
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeatReq::~HeartBeatReq() {
  // @@protoc_insertion_point(destructor:StreamService.HeartBeatReq)
  SharedDtor();
}

void HeartBeatReq::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HeartBeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeatReq_descriptor_;
}

const HeartBeatReq& HeartBeatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StreamService_2eproto();
  return *default_instance_;
}

HeartBeatReq* HeartBeatReq::default_instance_ = NULL;

HeartBeatReq* HeartBeatReq::New(::google::protobuf::Arena* arena) const {
  HeartBeatReq* n = new HeartBeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartBeatReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    msg_id_ = 0u;
    if (has_reversed()) {
      reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeartBeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamService.HeartBeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.HeartBeatReq.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_id;
        break;
      }

      // required uint32 msg_id = 2;
      case 2: {
        if (tag == 16) {
         parse_msg_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
          set_has_msg_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reversed;
        break;
      }

      // optional string reversed = 10;
      case 10: {
        if (tag == 82) {
         parse_reversed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.HeartBeatReq.reversed");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamService.HeartBeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamService.HeartBeatReq)
  return false;
#undef DO_
}

void HeartBeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamService.HeartBeatReq)
  // required string user_name = 1;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HeartBeatReq.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // required uint32 msg_id = 2;
  if (has_msg_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msg_id(), output);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HeartBeatReq.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reversed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamService.HeartBeatReq)
}

::google::protobuf::uint8* HeartBeatReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamService.HeartBeatReq)
  // required string user_name = 1;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HeartBeatReq.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // required uint32 msg_id = 2;
  if (has_msg_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msg_id(), target);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HeartBeatReq.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reversed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamService.HeartBeatReq)
  return target;
}

int HeartBeatReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_user_name()) {
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  if (has_msg_id()) {
    // required uint32 msg_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  return total_size;
}
int HeartBeatReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());

    // required uint32 msg_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reversed = 10;
  if (has_reversed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reversed());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartBeatReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeatReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeatReq::MergeFrom(const HeartBeatReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_msg_id()) {
      set_msg_id(from.msg_id());
    }
    if (from.has_reversed()) {
      set_has_reversed();
      reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HeartBeatReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatReq::CopyFrom(const HeartBeatReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HeartBeatReq::Swap(HeartBeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeatReq::InternalSwap(HeartBeatReq* other) {
  user_name_.Swap(&other->user_name_);
  std::swap(msg_id_, other->msg_id_);
  reversed_.Swap(&other->reversed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeatReq_descriptor_;
  metadata.reflection = HeartBeatReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeartBeatRes::kUserNameFieldNumber;
const int HeartBeatRes::kMsgIdFieldNumber;
const int HeartBeatRes::kReversedFieldNumber;
#endif  // !_MSC_VER

HeartBeatRes::HeartBeatRes()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamService.HeartBeatRes)
}

void HeartBeatRes::InitAsDefaultInstance() {
}

HeartBeatRes::HeartBeatRes(const HeartBeatRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StreamService.HeartBeatRes)
}

void HeartBeatRes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = 0u;
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeatRes::~HeartBeatRes() {
  // @@protoc_insertion_point(destructor:StreamService.HeartBeatRes)
  SharedDtor();
}

void HeartBeatRes::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HeartBeatRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeatRes_descriptor_;
}

const HeartBeatRes& HeartBeatRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StreamService_2eproto();
  return *default_instance_;
}

HeartBeatRes* HeartBeatRes::default_instance_ = NULL;

HeartBeatRes* HeartBeatRes::New(::google::protobuf::Arena* arena) const {
  HeartBeatRes* n = new HeartBeatRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartBeatRes::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    msg_id_ = 0u;
    if (has_reversed()) {
      reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeartBeatRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamService.HeartBeatRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.HeartBeatRes.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_id;
        break;
      }

      // required uint32 msg_id = 2;
      case 2: {
        if (tag == 16) {
         parse_msg_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
          set_has_msg_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reversed;
        break;
      }

      // optional string reversed = 10;
      case 10: {
        if (tag == 82) {
         parse_reversed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.HeartBeatRes.reversed");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamService.HeartBeatRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamService.HeartBeatRes)
  return false;
#undef DO_
}

void HeartBeatRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamService.HeartBeatRes)
  // required string user_name = 1;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HeartBeatRes.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // required uint32 msg_id = 2;
  if (has_msg_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msg_id(), output);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HeartBeatRes.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reversed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamService.HeartBeatRes)
}

::google::protobuf::uint8* HeartBeatRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamService.HeartBeatRes)
  // required string user_name = 1;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HeartBeatRes.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // required uint32 msg_id = 2;
  if (has_msg_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msg_id(), target);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HeartBeatRes.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reversed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamService.HeartBeatRes)
  return target;
}

int HeartBeatRes::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_user_name()) {
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  if (has_msg_id()) {
    // required uint32 msg_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  return total_size;
}
int HeartBeatRes::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());

    // required uint32 msg_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reversed = 10;
  if (has_reversed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reversed());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatRes::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartBeatRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeatRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeatRes::MergeFrom(const HeartBeatRes& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_msg_id()) {
      set_msg_id(from.msg_id());
    }
    if (from.has_reversed()) {
      set_has_reversed();
      reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HeartBeatRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatRes::CopyFrom(const HeartBeatRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HeartBeatRes::Swap(HeartBeatRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeatRes::InternalSwap(HeartBeatRes* other) {
  user_name_.Swap(&other->user_name_);
  std::swap(msg_id_, other->msg_id_);
  reversed_.Swap(&other->reversed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeatRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeatRes_descriptor_;
  metadata.reflection = HeartBeatRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CallReq::kFromUserNameFieldNumber;
const int CallReq::kToSessionNameFieldNumber;
const int CallReq::kCallTypeFieldNumber;
const int CallReq::kReversedFieldNumber;
#endif  // !_MSC_VER

CallReq::CallReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamService.CallReq)
}

void CallReq::InitAsDefaultInstance() {
}

CallReq::CallReq(const CallReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StreamService.CallReq)
}

void CallReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  from_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_session_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_type_ = 0;
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallReq::~CallReq() {
  // @@protoc_insertion_point(destructor:StreamService.CallReq)
  SharedDtor();
}

void CallReq::SharedDtor() {
  from_user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_session_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CallReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallReq_descriptor_;
}

const CallReq& CallReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StreamService_2eproto();
  return *default_instance_;
}

CallReq* CallReq::default_instance_ = NULL;

CallReq* CallReq::New(::google::protobuf::Arena* arena) const {
  CallReq* n = new CallReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallReq::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_from_user_name()) {
      from_user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_to_session_name()) {
      to_session_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    call_type_ = 0;
    if (has_reversed()) {
      reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CallReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamService.CallReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_user_name().data(), this->from_user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.CallReq.from_user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_to_session_name;
        break;
      }

      // required string to_session_name = 2;
      case 2: {
        if (tag == 18) {
         parse_to_session_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_session_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_session_name().data(), this->to_session_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.CallReq.to_session_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_call_type;
        break;
      }

      // required .StreamService.CallType call_type = 3;
      case 3: {
        if (tag == 24) {
         parse_call_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StreamService::CallType_IsValid(value)) {
            set_call_type(static_cast< ::StreamService::CallType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reversed;
        break;
      }

      // optional string reversed = 10;
      case 10: {
        if (tag == 82) {
         parse_reversed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.CallReq.reversed");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamService.CallReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamService.CallReq)
  return false;
#undef DO_
}

void CallReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamService.CallReq)
  // required string from_user_name = 1;
  if (has_from_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_user_name().data(), this->from_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallReq.from_user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_user_name(), output);
  }

  // required string to_session_name = 2;
  if (has_to_session_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_session_name().data(), this->to_session_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallReq.to_session_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_session_name(), output);
  }

  // required .StreamService.CallType call_type = 3;
  if (has_call_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->call_type(), output);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallReq.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reversed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamService.CallReq)
}

::google::protobuf::uint8* CallReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamService.CallReq)
  // required string from_user_name = 1;
  if (has_from_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_user_name().data(), this->from_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallReq.from_user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_user_name(), target);
  }

  // required string to_session_name = 2;
  if (has_to_session_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_session_name().data(), this->to_session_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallReq.to_session_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_session_name(), target);
  }

  // required .StreamService.CallType call_type = 3;
  if (has_call_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->call_type(), target);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallReq.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reversed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamService.CallReq)
  return target;
}

int CallReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_from_user_name()) {
    // required string from_user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_user_name());
  }

  if (has_to_session_name()) {
    // required string to_session_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_session_name());
  }

  if (has_call_type()) {
    // required .StreamService.CallType call_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());
  }

  return total_size;
}
int CallReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string from_user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_user_name());

    // required string to_session_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_session_name());

    // required .StreamService.CallType call_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reversed = 10;
  if (has_reversed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reversed());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CallReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CallReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CallReq::MergeFrom(const CallReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_from_user_name()) {
      set_has_from_user_name();
      from_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_user_name_);
    }
    if (from.has_to_session_name()) {
      set_has_to_session_name();
      to_session_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_session_name_);
    }
    if (from.has_call_type()) {
      set_call_type(from.call_type());
    }
    if (from.has_reversed()) {
      set_has_reversed();
      reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CallReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallReq::CopyFrom(const CallReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CallReq::Swap(CallReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallReq::InternalSwap(CallReq* other) {
  from_user_name_.Swap(&other->from_user_name_);
  to_session_name_.Swap(&other->to_session_name_);
  std::swap(call_type_, other->call_type_);
  reversed_.Swap(&other->reversed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallReq_descriptor_;
  metadata.reflection = CallReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CallRes::kFromUserNameFieldNumber;
const int CallRes::kToSessionNameFieldNumber;
const int CallRes::kCallTypeFieldNumber;
const int CallRes::kCallResultTypeFieldNumber;
const int CallRes::kReversedFieldNumber;
#endif  // !_MSC_VER

CallRes::CallRes()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamService.CallRes)
}

void CallRes::InitAsDefaultInstance() {
}

CallRes::CallRes(const CallRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StreamService.CallRes)
}

void CallRes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  from_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_session_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_type_ = 0;
  call_result_type_ = 0;
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallRes::~CallRes() {
  // @@protoc_insertion_point(destructor:StreamService.CallRes)
  SharedDtor();
}

void CallRes::SharedDtor() {
  from_user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_session_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CallRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallRes_descriptor_;
}

const CallRes& CallRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StreamService_2eproto();
  return *default_instance_;
}

CallRes* CallRes::default_instance_ = NULL;

CallRes* CallRes::New(::google::protobuf::Arena* arena) const {
  CallRes* n = new CallRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallRes::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CallRes*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(call_type_, call_result_type_);
    if (has_from_user_name()) {
      from_user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_to_session_name()) {
      to_session_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reversed()) {
      reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CallRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamService.CallRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_user_name().data(), this->from_user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.CallRes.from_user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_to_session_name;
        break;
      }

      // required string to_session_name = 2;
      case 2: {
        if (tag == 18) {
         parse_to_session_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_session_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_session_name().data(), this->to_session_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.CallRes.to_session_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_call_type;
        break;
      }

      // required .StreamService.CallType call_type = 3;
      case 3: {
        if (tag == 24) {
         parse_call_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StreamService::CallType_IsValid(value)) {
            set_call_type(static_cast< ::StreamService::CallType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_call_result_type;
        break;
      }

      // required .StreamService.CallResultType call_result_type = 4;
      case 4: {
        if (tag == 32) {
         parse_call_result_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StreamService::CallResultType_IsValid(value)) {
            set_call_result_type(static_cast< ::StreamService::CallResultType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reversed;
        break;
      }

      // optional string reversed = 10;
      case 10: {
        if (tag == 82) {
         parse_reversed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.CallRes.reversed");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamService.CallRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamService.CallRes)
  return false;
#undef DO_
}

void CallRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamService.CallRes)
  // required string from_user_name = 1;
  if (has_from_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_user_name().data(), this->from_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallRes.from_user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_user_name(), output);
  }

  // required string to_session_name = 2;
  if (has_to_session_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_session_name().data(), this->to_session_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallRes.to_session_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_session_name(), output);
  }

  // required .StreamService.CallType call_type = 3;
  if (has_call_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->call_type(), output);
  }

  // required .StreamService.CallResultType call_result_type = 4;
  if (has_call_result_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->call_result_type(), output);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallRes.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reversed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamService.CallRes)
}

::google::protobuf::uint8* CallRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamService.CallRes)
  // required string from_user_name = 1;
  if (has_from_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_user_name().data(), this->from_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallRes.from_user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_user_name(), target);
  }

  // required string to_session_name = 2;
  if (has_to_session_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_session_name().data(), this->to_session_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallRes.to_session_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_session_name(), target);
  }

  // required .StreamService.CallType call_type = 3;
  if (has_call_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->call_type(), target);
  }

  // required .StreamService.CallResultType call_result_type = 4;
  if (has_call_result_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->call_result_type(), target);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.CallRes.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reversed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamService.CallRes)
  return target;
}

int CallRes::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_from_user_name()) {
    // required string from_user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_user_name());
  }

  if (has_to_session_name()) {
    // required string to_session_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_session_name());
  }

  if (has_call_type()) {
    // required .StreamService.CallType call_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());
  }

  if (has_call_result_type()) {
    // required .StreamService.CallResultType call_result_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_result_type());
  }

  return total_size;
}
int CallRes::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string from_user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_user_name());

    // required string to_session_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_session_name());

    // required .StreamService.CallType call_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());

    // required .StreamService.CallResultType call_result_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_result_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reversed = 10;
  if (has_reversed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reversed());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallRes::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CallRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CallRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CallRes::MergeFrom(const CallRes& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_from_user_name()) {
      set_has_from_user_name();
      from_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_user_name_);
    }
    if (from.has_to_session_name()) {
      set_has_to_session_name();
      to_session_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_session_name_);
    }
    if (from.has_call_type()) {
      set_call_type(from.call_type());
    }
    if (from.has_call_result_type()) {
      set_call_result_type(from.call_result_type());
    }
    if (from.has_reversed()) {
      set_has_reversed();
      reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CallRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallRes::CopyFrom(const CallRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void CallRes::Swap(CallRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallRes::InternalSwap(CallRes* other) {
  from_user_name_.Swap(&other->from_user_name_);
  to_session_name_.Swap(&other->to_session_name_);
  std::swap(call_type_, other->call_type_);
  std::swap(call_result_type_, other->call_result_type_);
  reversed_.Swap(&other->reversed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallRes_descriptor_;
  metadata.reflection = CallRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HangUpReq::kFromUserNameFieldNumber;
const int HangUpReq::kToSessionNameFieldNumber;
const int HangUpReq::kCallTypeFieldNumber;
const int HangUpReq::kReversedFieldNumber;
#endif  // !_MSC_VER

HangUpReq::HangUpReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamService.HangUpReq)
}

void HangUpReq::InitAsDefaultInstance() {
}

HangUpReq::HangUpReq(const HangUpReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StreamService.HangUpReq)
}

void HangUpReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  from_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_session_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_type_ = 0;
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HangUpReq::~HangUpReq() {
  // @@protoc_insertion_point(destructor:StreamService.HangUpReq)
  SharedDtor();
}

void HangUpReq::SharedDtor() {
  from_user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_session_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HangUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HangUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HangUpReq_descriptor_;
}

const HangUpReq& HangUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StreamService_2eproto();
  return *default_instance_;
}

HangUpReq* HangUpReq::default_instance_ = NULL;

HangUpReq* HangUpReq::New(::google::protobuf::Arena* arena) const {
  HangUpReq* n = new HangUpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HangUpReq::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_from_user_name()) {
      from_user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_to_session_name()) {
      to_session_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    call_type_ = 0;
    if (has_reversed()) {
      reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HangUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamService.HangUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_user_name().data(), this->from_user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.HangUpReq.from_user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_to_session_name;
        break;
      }

      // required string to_session_name = 2;
      case 2: {
        if (tag == 18) {
         parse_to_session_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_session_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_session_name().data(), this->to_session_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.HangUpReq.to_session_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_call_type;
        break;
      }

      // required .StreamService.CallType call_type = 3;
      case 3: {
        if (tag == 24) {
         parse_call_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StreamService::CallType_IsValid(value)) {
            set_call_type(static_cast< ::StreamService::CallType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reversed;
        break;
      }

      // optional string reversed = 10;
      case 10: {
        if (tag == 82) {
         parse_reversed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.HangUpReq.reversed");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamService.HangUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamService.HangUpReq)
  return false;
#undef DO_
}

void HangUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamService.HangUpReq)
  // required string from_user_name = 1;
  if (has_from_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_user_name().data(), this->from_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HangUpReq.from_user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_user_name(), output);
  }

  // required string to_session_name = 2;
  if (has_to_session_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_session_name().data(), this->to_session_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HangUpReq.to_session_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_session_name(), output);
  }

  // required .StreamService.CallType call_type = 3;
  if (has_call_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->call_type(), output);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HangUpReq.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reversed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamService.HangUpReq)
}

::google::protobuf::uint8* HangUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamService.HangUpReq)
  // required string from_user_name = 1;
  if (has_from_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_user_name().data(), this->from_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HangUpReq.from_user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_user_name(), target);
  }

  // required string to_session_name = 2;
  if (has_to_session_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_session_name().data(), this->to_session_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HangUpReq.to_session_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_session_name(), target);
  }

  // required .StreamService.CallType call_type = 3;
  if (has_call_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->call_type(), target);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.HangUpReq.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reversed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamService.HangUpReq)
  return target;
}

int HangUpReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_from_user_name()) {
    // required string from_user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_user_name());
  }

  if (has_to_session_name()) {
    // required string to_session_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_session_name());
  }

  if (has_call_type()) {
    // required .StreamService.CallType call_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());
  }

  return total_size;
}
int HangUpReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string from_user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_user_name());

    // required string to_session_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_session_name());

    // required .StreamService.CallType call_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reversed = 10;
  if (has_reversed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reversed());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HangUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HangUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HangUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HangUpReq::MergeFrom(const HangUpReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_from_user_name()) {
      set_has_from_user_name();
      from_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_user_name_);
    }
    if (from.has_to_session_name()) {
      set_has_to_session_name();
      to_session_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_session_name_);
    }
    if (from.has_call_type()) {
      set_call_type(from.call_type());
    }
    if (from.has_reversed()) {
      set_has_reversed();
      reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HangUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HangUpReq::CopyFrom(const HangUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HangUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void HangUpReq::Swap(HangUpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HangUpReq::InternalSwap(HangUpReq* other) {
  from_user_name_.Swap(&other->from_user_name_);
  to_session_name_.Swap(&other->to_session_name_);
  std::swap(call_type_, other->call_type_);
  reversed_.Swap(&other->reversed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HangUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HangUpReq_descriptor_;
  metadata.reflection = HangUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StreamExhange::kFromUserNameFieldNumber;
const int StreamExhange::kToSessionNameFieldNumber;
const int StreamExhange::kCallTypeFieldNumber;
const int StreamExhange::kReversedFieldNumber;
#endif  // !_MSC_VER

StreamExhange::StreamExhange()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamService.StreamExhange)
}

void StreamExhange::InitAsDefaultInstance() {
}

StreamExhange::StreamExhange(const StreamExhange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StreamService.StreamExhange)
}

void StreamExhange::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  from_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_type_ = 0;
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamExhange::~StreamExhange() {
  // @@protoc_insertion_point(destructor:StreamService.StreamExhange)
  SharedDtor();
}

void StreamExhange::SharedDtor() {
  from_user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void StreamExhange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamExhange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamExhange_descriptor_;
}

const StreamExhange& StreamExhange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StreamService_2eproto();
  return *default_instance_;
}

StreamExhange* StreamExhange::default_instance_ = NULL;

StreamExhange* StreamExhange::New(::google::protobuf::Arena* arena) const {
  StreamExhange* n = new StreamExhange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StreamExhange::Clear() {
  if (_has_bits_[0 / 32] & 13) {
    if (has_from_user_name()) {
      from_user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    call_type_ = 0;
    if (has_reversed()) {
      reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  to_session_name_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StreamExhange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamService.StreamExhange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_user_name().data(), this->from_user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.StreamExhange.from_user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_to_session_name;
        break;
      }

      // repeated string to_session_name = 2;
      case 2: {
        if (tag == 18) {
         parse_to_session_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_to_session_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_session_name(this->to_session_name_size() - 1).data(),
            this->to_session_name(this->to_session_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.StreamExhange.to_session_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_to_session_name;
        if (input->ExpectTag(24)) goto parse_call_type;
        break;
      }

      // required .StreamService.CallType call_type = 3;
      case 3: {
        if (tag == 24) {
         parse_call_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StreamService::CallType_IsValid(value)) {
            set_call_type(static_cast< ::StreamService::CallType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reversed;
        break;
      }

      // optional string reversed = 10;
      case 10: {
        if (tag == 82) {
         parse_reversed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StreamService.StreamExhange.reversed");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamService.StreamExhange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamService.StreamExhange)
  return false;
#undef DO_
}

void StreamExhange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamService.StreamExhange)
  // required string from_user_name = 1;
  if (has_from_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_user_name().data(), this->from_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.StreamExhange.from_user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_user_name(), output);
  }

  // repeated string to_session_name = 2;
  for (int i = 0; i < this->to_session_name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->to_session_name(i).data(), this->to_session_name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "StreamService.StreamExhange.to_session_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->to_session_name(i), output);
  }

  // required .StreamService.CallType call_type = 3;
  if (has_call_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->call_type(), output);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.StreamExhange.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reversed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamService.StreamExhange)
}

::google::protobuf::uint8* StreamExhange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamService.StreamExhange)
  // required string from_user_name = 1;
  if (has_from_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_user_name().data(), this->from_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.StreamExhange.from_user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_user_name(), target);
  }

  // repeated string to_session_name = 2;
  for (int i = 0; i < this->to_session_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_session_name(i).data(), this->to_session_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.StreamExhange.to_session_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->to_session_name(i), target);
  }

  // required .StreamService.CallType call_type = 3;
  if (has_call_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->call_type(), target);
  }

  // optional string reversed = 10;
  if (has_reversed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StreamService.StreamExhange.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reversed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamService.StreamExhange)
  return target;
}

int StreamExhange::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_from_user_name()) {
    // required string from_user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_user_name());
  }

  if (has_call_type()) {
    // required .StreamService.CallType call_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());
  }

  return total_size;
}
int StreamExhange::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string from_user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_user_name());

    // required .StreamService.CallType call_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reversed = 10;
  if (has_reversed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reversed());
  }

  // repeated string to_session_name = 2;
  total_size += 1 * this->to_session_name_size();
  for (int i = 0; i < this->to_session_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->to_session_name(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamExhange::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StreamExhange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StreamExhange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StreamExhange::MergeFrom(const StreamExhange& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  to_session_name_.MergeFrom(from.to_session_name_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_from_user_name()) {
      set_has_from_user_name();
      from_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_user_name_);
    }
    if (from.has_call_type()) {
      set_call_type(from.call_type());
    }
    if (from.has_reversed()) {
      set_has_reversed();
      reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void StreamExhange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamExhange::CopyFrom(const StreamExhange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExhange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void StreamExhange::Swap(StreamExhange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamExhange::InternalSwap(StreamExhange* other) {
  from_user_name_.Swap(&other->from_user_name_);
  to_session_name_.UnsafeArenaSwap(&other->to_session_name_);
  std::swap(call_type_, other->call_type_);
  reversed_.Swap(&other->reversed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StreamExhange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamExhange_descriptor_;
  metadata.reflection = StreamExhange_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace StreamService

// @@protoc_insertion_point(global_scope)
